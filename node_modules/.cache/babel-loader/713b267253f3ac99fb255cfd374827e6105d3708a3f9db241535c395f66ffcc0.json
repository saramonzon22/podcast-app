{"ast":null,"code":"async function getTop100() {\n  try {\n    const storedData = localStorage.getItem('top100Podcasts');\n    const storedTimeLS = localStorage.getItem('top100PodcastsTimestamp');\n    if (storedData && storedTimeLS) {\n      const currentTime = new Date().getTime();\n      const storedTime = new Date(storedTimeLS).getTime();\n      const differenceHours = (currentTime - storedTime) / (1000 * 60 * 60);\n      if (differenceHours < 24) {\n        return JSON.parse(storedData);\n      }\n    }\n    const response = await fetch('https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json');\n    if (!response.ok) {\n      throw new Error('Error en la solicitud');\n    }\n    const formattedResponse = await response.json();\n    localStorage.setItem('top100Podcasts', JSON.stringify(formattedResponse.feed.entry));\n    localStorage.setItem('top100PodcastsTimestamp', new Date().toISOString());\n    return formattedResponse.feed.entry;\n  } catch (error) {\n    console.error('Ocurri贸 un error:', error);\n    throw error;\n  }\n}\nasync function getSinglePodcast(podcastId) {\n  try {\n    const response = await fetch(`https://itunes.apple.com/lookup?id=${podcastId}&media=podcast&entity=podcastEpisode&limit=100`);\n    if (!response.ok) {\n      throw new Error('Error en la solicitud');\n    }\n    const formattedSinglePodcast = await response.json();\n    return formattedSinglePodcast.results;\n  } catch (error) {\n    console.error('Ocurri贸 un error:', error);\n    throw error;\n  }\n}\nexport { getTop100, getSinglePodcast };","map":{"version":3,"names":["getTop100","storedData","localStorage","getItem","storedTimeLS","currentTime","Date","getTime","storedTime","differenceHours","JSON","parse","response","fetch","ok","Error","formattedResponse","json","setItem","stringify","feed","entry","toISOString","error","console","getSinglePodcast","podcastId","formattedSinglePodcast","results"],"sources":["/home/usuario/Escritorio/podcast-app/src/services/podcast.js"],"sourcesContent":["async function getTop100() {\n    try {\n        const storedData = localStorage.getItem('top100Podcasts');\n        const storedTimeLS = localStorage.getItem('top100PodcastsTimestamp');\n\n        if (storedData && storedTimeLS) {\n            const currentTime = new Date().getTime();\n            const storedTime = new Date(storedTimeLS).getTime();\n            const differenceHours = (currentTime - storedTime) / (1000 * 60 * 60);\n\n            if (differenceHours < 24) {\n                return JSON.parse(storedData);\n            }\n        }\n\n        const response = await fetch(\n            'https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json'\n        );\n        if (!response.ok) {\n            throw new Error('Error en la solicitud');\n        }\n        const formattedResponse = await response.json();\n\n        localStorage.setItem('top100Podcasts', JSON.stringify(formattedResponse.feed.entry));\n        localStorage.setItem('top100PodcastsTimestamp', new Date().toISOString());\n\n        return formattedResponse.feed.entry;\n    } catch (error) {\n        console.error('Ocurri贸 un error:', error);\n        throw error;\n    }\n}\n\nasync function getSinglePodcast(podcastId) {\n    try {\n        const response = await fetch(`https://itunes.apple.com/lookup?id=${podcastId}&media=podcast&entity=podcastEpisode&limit=100`);\n\n        if (!response.ok) {\n            throw new Error('Error en la solicitud');\n        }\n\n        const formattedSinglePodcast = await response.json();\n        return formattedSinglePodcast.results;\n    } catch (error) {\n        console.error('Ocurri贸 un error:', error);\n        throw error;\n    }\n}\n\n\nexport { getTop100, getSinglePodcast };"],"mappings":"AAAA,eAAeA,SAASA,CAAA,EAAG;EACvB,IAAI;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACzD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;IAEpE,IAAIF,UAAU,IAAIG,YAAY,EAAE;MAC5B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACxC,MAAMC,UAAU,GAAG,IAAIF,IAAI,CAACF,YAAY,CAAC,CAACG,OAAO,CAAC,CAAC;MACnD,MAAME,eAAe,GAAG,CAACJ,WAAW,GAAGG,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;MAErE,IAAIC,eAAe,GAAG,EAAE,EAAE;QACtB,OAAOC,IAAI,CAACC,KAAK,CAACV,UAAU,CAAC;MACjC;IACJ;IAEA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CACxB,uEACJ,CAAC;IACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,MAAMC,iBAAiB,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAE/Cf,YAAY,CAACgB,OAAO,CAAC,gBAAgB,EAAER,IAAI,CAACS,SAAS,CAACH,iBAAiB,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC;IACpFnB,YAAY,CAACgB,OAAO,CAAC,yBAAyB,EAAE,IAAIZ,IAAI,CAAC,CAAC,CAACgB,WAAW,CAAC,CAAC,CAAC;IAEzE,OAAON,iBAAiB,CAACI,IAAI,CAACC,KAAK;EACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AACJ;AAEA,eAAeE,gBAAgBA,CAACC,SAAS,EAAE;EACvC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCa,SAAU,gDAA+C,CAAC;IAE7H,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IAEA,MAAMY,sBAAsB,GAAG,MAAMf,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpD,OAAOU,sBAAsB,CAACC,OAAO;EACzC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AACJ;AAGA,SAASvB,SAAS,EAAEyB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}