{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Escritorio/podcast-app/src/components/cardInfo/CardInfo.jsx\";\nimport React from 'react';\nimport './cardInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardInfo(props) {\n  let content;\n  if (props.singlePodcast) {\n    var _props$singlePodcast;\n    const description = (_props$singlePodcast = props.singlePodcast[props.singlePodcast.length - 1]) === null || _props$singlePodcast === void 0 ? void 0 : _props$singlePodcast.shortDescription;\n    const descriptionText = description ? description : 'The podcast author has not provided a description to show';\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.singlePodcast[props.singlePodcast.length - 1].artworkUrl600,\n          alt: \"\",\n          className: \"podcast-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-podcast\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"podcast-title\",\n            children: props.singlePodcast[props.singlePodcast.length - 1].collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"podcast-artist\",\n            children: [\"By \", props.singlePodcast[0].artistName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"podcast-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description-info\",\n            children: descriptionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (props.singleEpisode) {\n    const description = props.singleEpisode.shortDescription;\n    const descriptionTextEpisode = description ? description : 'The podcast author has not provided a description to show';\n    const collectionName = props.singleEpisode.collectionName;\n    const alternativeName = collectionName ? collectionName : 'No name provided';\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.singleEpisode.artworkUrl600,\n          alt: \"\",\n          className: \"podcast-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-podcast\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"podcast-title\",\n            children: props.singleEpisode.collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"podcast-artist\",\n            children: [\"By \", alternativeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"podcast-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description-info\",\n            children: descriptionTextEpisode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  return content;\n}\n_c = CardInfo;\nexport default CardInfo;\nvar _c;\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CardInfo","props","content","singlePodcast","_props$singlePodcast","description","length","shortDescription","descriptionText","children","className","src","artworkUrl600","alt","fileName","_jsxFileName","lineNumber","columnNumber","collectionName","artistName","singleEpisode","descriptionTextEpisode","alternativeName","_c","$RefreshReg$"],"sources":["/home/usuario/Escritorio/podcast-app/src/components/cardInfo/CardInfo.jsx"],"sourcesContent":["import React from 'react';\nimport './cardInfo.css';\n\nfunction CardInfo(props) {\n  \n\n  let content;\n  if (props.singlePodcast) {\n    \n    const description = props.singlePodcast[props.singlePodcast.length - 1]?.shortDescription;\n    const descriptionText = description ? description : 'The podcast author has not provided a description to show';\n\n    content = (\n      <>\n        <article className=\"info\">\n          <img src={props.singlePodcast[props.singlePodcast.length - 1].artworkUrl600} alt=\"\" className=\"podcast-img\" />\n          <div className='info-podcast'>\n            <h4 className=\"podcast-title\">{props.singlePodcast[props.singlePodcast.length - 1].collectionName}</h4>\n            <p className='podcast-artist'>By {props.singlePodcast[0].artistName}</p>\n          </div>\n          <div className=\"podcast-description\">\n            <h4>Description:</h4>\n            <p className=\"description-info\">{descriptionText}</p>\n          </div>\n        </article>\n      </>\n    );\n  } else if (props.singleEpisode) {\n\n    const description = props.singleEpisode.shortDescription;\n    const descriptionTextEpisode = description ? description : 'The podcast author has not provided a description to show';\n\n    const collectionName = props.singleEpisode.collectionName;\n    const alternativeName = collectionName ? collectionName : 'No name provided'\n    content = (\n      <>\n        <article className=\"info\">\n          <img src={props.singleEpisode.artworkUrl600} alt=\"\" className=\"podcast-img\" />\n          <div className='info-podcast'>\n            <h4 className=\"podcast-title\">{props.singleEpisode.collectionName}</h4>\n            <p className='podcast-artist'>By {alternativeName}</p>\n          </div>\n          <div className=\"podcast-description\">\n            <h4>Description:</h4>\n            <p className=\"description-info\">{descriptionTextEpisode}</p>\n          </div>\n        </article>\n      </>\n    );\n  }\n\n  return content;\n}\n\nexport default CardInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}