{"ast":null,"code":"async function getTop100() {\n  try {\n    const storedData = localStorage.getItem('top100Podcasts');\n    const storedTimeLS = localStorage.getItem('top100PodcastsTimestamp');\n    if (storedData && storedTimeLS) {\n      const currentTime = new Date().getTime();\n      const storedTime = new Date(storedTimeLS).getTime();\n      const differenceHours = (currentTime - storedTime) / (1000 * 60 * 60);\n      if (differenceHours < 24) {\n        return JSON.parse(storedData);\n      }\n    }\n    const response = await fetch('https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json');\n    if (!response.ok) {\n      throw new Error('Error en la solicitud');\n    }\n    const formattedResponse = await response.json();\n    localStorage.setItem('top100Podcasts', JSON.stringify(formattedResponse.feed.entry));\n    localStorage.setItem('top100PodcastsTimestamp', new Date().toISOString());\n    return formattedResponse.feed.entry;\n  } catch (error) {\n    console.error('Ocurrió un error:', error);\n    throw error;\n  }\n}\nexport { getTop100 };","map":{"version":3,"names":["getTop100","storedData","localStorage","getItem","storedTimeLS","currentTime","Date","getTime","storedTime","differenceHours","JSON","parse","response","fetch","ok","Error","formattedResponse","json","setItem","stringify","feed","entry","toISOString","error","console"],"sources":["/home/usuario/Escritorio/podcast-app/src/services/podcast.js"],"sourcesContent":["async function getTop100() {\n    try {\n      const storedData = localStorage.getItem('top100Podcasts');\n      const storedTimeLS = localStorage.getItem('top100PodcastsTimestamp');\n  \n      if (storedData && storedTimeLS) {\n        const currentTime = new Date().getTime();\n        const storedTime = new Date(storedTimeLS).getTime();\n        const differenceHours = (currentTime - storedTime) / (1000 * 60 * 60);\n  \n        if (differenceHours < 24) {\n          return JSON.parse(storedData);\n        }\n      }\n  \n      const response = await fetch(\n        'https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json'\n      );\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const formattedResponse = await response.json();\n  \n      localStorage.setItem('top100Podcasts', JSON.stringify(formattedResponse.feed.entry));\n      localStorage.setItem('top100PodcastsTimestamp', new Date().toISOString());\n  \n      return formattedResponse.feed.entry;\n    } catch (error) {\n      console.error('Ocurrió un error:', error);\n      throw error;\n    }\n  }\n  \n  export { getTop100 };"],"mappings":"AAAA,eAAeA,SAASA,CAAA,EAAG;EACvB,IAAI;IACF,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACzD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;IAEpE,IAAIF,UAAU,IAAIG,YAAY,EAAE;MAC9B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACxC,MAAMC,UAAU,GAAG,IAAIF,IAAI,CAACF,YAAY,CAAC,CAACG,OAAO,CAAC,CAAC;MACnD,MAAME,eAAe,GAAG,CAACJ,WAAW,GAAGG,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;MAErE,IAAIC,eAAe,GAAG,EAAE,EAAE;QACxB,OAAOC,IAAI,CAACC,KAAK,CAACV,UAAU,CAAC;MAC/B;IACF;IAEA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uEACF,CAAC;IACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMC,iBAAiB,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAE/Cf,YAAY,CAACgB,OAAO,CAAC,gBAAgB,EAAER,IAAI,CAACS,SAAS,CAACH,iBAAiB,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC;IACpFnB,YAAY,CAACgB,OAAO,CAAC,yBAAyB,EAAE,IAAIZ,IAAI,CAAC,CAAC,CAACgB,WAAW,CAAC,CAAC,CAAC;IAEzE,OAAON,iBAAiB,CAACI,IAAI,CAACC,KAAK;EACrC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF;AAEA,SAASvB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}